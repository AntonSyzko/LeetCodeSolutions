package leet.code.solutions.arrays;

import java.util.HashMap;
import java.util.Map;

/*
https://leetcode.com/problems/find-the-difference/submissions/1606439014/

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
 */
public class FindTheDifference {

    public static void main(String[] args) {
        String s = "abcd";
        String t = "abcde";

        System.out.println(findTheDifferenceMy(s, t));

    }

    private  static char findTheDifferenceMy(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();

        for(char c : t.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }

        for(char c : s.toCharArray()) {

            if(map.containsKey(c)) {
                if(map.get(c) == 1) {
                    map.remove(c);
                }else{
                    map.put(c, map.get(c) - 1);
                }
            }

        }

        return map.entrySet().iterator().next().getKey();
    }


    private static char findTheDifferenceAlphabet(String s, String t) {
        int[] alph = new int[26];
        for (char c : s.toCharArray()) {
            alph[c - 'a']++;
        }

        for (char c : t.toCharArray()) {
            alph[c - 'a']--;
        }

        for (int i = 0; i < alph.length; i++) {
            if(alph[i] != 0){
                return (char) (i + 'a');
            }
        }
        return 0;
    }


    private  static char findTheDifference(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();

        for(char c : s.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }

        for(char c : t.toCharArray()) {

            if(map.containsKey(c) && map.get(c) == 0 || !map.containsKey(c)) {
                   return c;
            }else{
                map.put(c, map.get(c) - 1);
            }
            }

       return '!';
    }



}
